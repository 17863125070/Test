<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.first.demo.User.mapper.SysMenuMapper">
    <resultMap id="BaseResultMap" type="com.first.demo.User.entity.SysMenu">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Jan 08 10:05:38 CST 2019.
        -->
        <id column="menu_id" property="menuId" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="perms" property="perms" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <!-- 当前菜单的父菜单名称 -->
        <result column="parentName" property="parentName" jdbcType="VARCHAR"></result>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Jan 08 10:05:38 CST 2019.
        -->
        menu_id, parent_id, name, url, perms, type, icon, order_num
    </sql>
    <update id="updateMenu" parameterType="com.first.demo.User.entity.SysMenu">
        update sys_menu set parent_id = #{sysMenu.parentId,jdbcType=INTEGER},
          name = #{sysMenu.name,jdbcType=VARCHAR},
          url = #{sysMenu.url,jdbcType=VARCHAR},
          perms = #{sysMenu.perms,jdbcType=VARCHAR},
          icon = #{sysMenu.icon,jdbcType=VARCHAR},
          type= #{sysMenu.type,jdbcType=INTEGER},
          order_num = #{sysMenu.orderNum,jdbcType=INTEGER}
      where menu_id = #{sysMenu.menuId,jdbcType=INTEGER}
    </update>
  <!--  <update id="updateBymenuId" parameterType="java.lang.String" >
        update sys_menu set is_delete='1' where menu_id =#{menuId}
    </update>-->
    <!--<update id="updateRoleMenu" parameterType="string">
        update sys_role_menu set menu_id=SYS_MENU_SEQUENCE.nextval where role_id=#{roleId,jdbcType=VARCHAR}
    </update>-->
    <!-- 批量删除 -->
    <delete id="deleteMenu" parameterType="java.util.List">
        delete from sys_menu
        where
        menu_id in
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>
    <select id="findPermsByUserId" resultType="java.lang.String" parameterType="integer">
    select DISTINCT m.perms
    from  sys_menu m
    INNER JOIN sys_role_menu rm
    on m.menu_id = rm.menu_id
    INNER JOIN sys_user_role ur
    on  rm.role_id  = ur.role_id
    INNER JOIN  sys_user u
    on  ur.user_id = u.user_id
    where u.user_id = #{userId}
  </select>
    <!--根目录-->
    <select id="findDirMenuByUserId" parameterType="integer" resultType="java.util.Map">
select distinct (name) "name", sm.menu_id "menuId", parent_id "parentId", type "type", icon "icon",url "url"
  from sys_menu sm
 inner join sys_role_menu rm
    on rm.menu_id = sm.menu_id
 inner join sys_user_role ur
    on ur.role_id = rm.role_id
 where sm.type = '0'
   and ur.user_id = #{userId}
  </select>

    <select id="findSubMenuByUserId" resultType="java.util.Map" parameterType="java.util.Map">
    select distinct(name) "name",sm.menu_id "menuId", parent_id "parentId",type "type",icon "icon",url "url" from sys_menu sm
    inner join sys_role_menu rm
    on rm.menu_id=sm.menu_id
    inner join sys_user_role ur
    on ur.role_id=rm.role_id
    inner join sys_user u
    on u.user_id=ur.user_id
    where sm.type ='1' and u.user_id=#{userId,jdbcType=INTEGER} and sm.parent_id=#{parentId,jdbcType=INTEGER}
    </select>
    <!--查询菜单和父菜单
        系统管理
            菜单管理
            ....
        ETL监控管理
            监控对象
            报警展示
            数据源管理
            ....
            and m.name like  '%'||#{query.search}||'%'
    -->
    <select id="findMenuByPage" resultMap="BaseResultMap" parameterType="com.first.demo.util.Query">
        select m.*,p.NAME "parentName"
        from SYS_MENU m
        left join SYS_MENU p
        on m.PARENT_ID=p.MENU_ID
        <where>
            <if test="query.search!=null and query.search!='' ">
                and m.name like concat(concat('%',#{query.search}),'%')
            </if>
            and m.is_deleted='0'
        </where>
        order by m.ORDER_NUM
    </select>
    <!--菜单表字段type
            0：目录
            1:菜单
            2：按钮
    -->
    <select id="selectMenuTree" resultMap="BaseResultMap">
        select * from sys_menu m where m.type !='2'
    </select>


    <select id="findMenu" resultMap="BaseResultMap">
        select m.*,p.NAME "parentName"
        from SYS_MENU m
        left join SYS_MENU p
        on m.PARENT_ID=p.MENU_ID
        <where>
            <if test="query.search!=null and query.search!='' ">
                and m.name like concat(concat('%',#{query.search}),'%')
            </if>
            and m.menu_id = (select b.menu_id from sys_menu b where b.name=#{name,jdbcType=VARCHAR})
            or m.parent_id in (select a.menu_id
            from sys_menu a
            where 1 = 1
            and a.name = #{name,jdbcType=VARCHAR}
            or a.parent_id = (select a.menu_id
            from sys_menu a
            where 1 = 1
            and a.name =#{name,jdbcType=VARCHAR}))
            and m.is_deleted='0'
        </where>
        order by m.ORDER_NUM
    </select>

    <!--权限菜单-->

    <resultMap id="roleAllot" type="com.first.demo.User.entity.SysRoleMenuParent">
        <result column="ID" jdbcType="INTEGER" property="id"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
        <collection property="children"
                    ofType="com.first.demo.User.entity.SysRoleMenuChildren">
            <id column="CHILDRENID" jdbcType="VARCHAR" property="id"/>
            <result column="CHILERENTITLE" jdbcType="VARCHAR" property="title"/>
        </collection>

    </resultMap>
    <select id="selectAllMenu" resultMap="roleAllot">

    SELECT p.MENU_ID  ID,
           p.NAME  TITLE,
           m.MENUCHIDREN_ID  CHILDRENID,
           m.MENUCHIDRENNAME  CHILERENTITLE
    FROM (SELECT T1.MENU_ID, T1.NAME FROM SYS_MENU T1 WHERE T1.TYPE = '0') p LEFT JOIN
         (SELECT T2.MENU_ID   MENUCHIDREN_ID,
                 T2.PARENT_ID MENUCHIDREN_PARENTID,
                 T2.NAME      MENUCHIDRENNAME
            FROM SYS_MENU T2
           WHERE T2.TYPE = '1')  m ON p.MENU_ID = m.MENUCHIDREN_PARENTID


</select>
    <resultMap id="selectByRoleIdAllMenu" type="com.first.demo.User.entity.SysRoleMenuChildren">
        <result column="ID" jdbcType="INTEGER" property="id"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
    </resultMap>
    <select id="selectByRoleIdAllMenu" resultMap="selectByRoleIdAllMenu" parameterType="java.lang.String">

    SELECT M.MENU_ID as ID
      FROM SYS_MENU M
      LEFT JOIN SYS_ROLE_MENU R
        ON M.MENU_ID = R.MENU_ID
     WHERE R.ROLE_ID = #{roleId}
       AND M.TYPE = '1'

</select>

    <select id="selectAllButton" resultMap="selectByRoleIdAllMenu" parameterType="java.lang.String">


    SELECT M.MENU_ID as ID
          FROM SYS_MENU M
         WHERE  M.TYPE = '2'

    </select>
    <select id="findThisMenuByMenuId" resultType="com.first.demo.User.entity.SysMenu" parameterType="java.lang.Integer">
        select m.menu_id,m.parent_id,m.name,m.url,m.perms,m.type,m.icon,m.order_num from sys_menu m where m.menu_id=#{menuId,jdbcType=INTEGER}
    </select>
    <select id="selectMaxMenuId" resultType="java.lang.String">
        select max(a.menu_id) from sys_menu a
    </select>
    <select id="getNameList" resultMap="BaseResultMap">
        select a.name from sys_menu a where a.parent_id='0'
    </select>

    <delete id="deleteByroleId" parameterType="java.lang.String">
        delete  from  sys_role_menu  where role_id =#{roleId}
    </delete>
    <!--删除与菜单关联的表-->
   <delete id="deleteBymenuId"  parameterType="java.lang.String">
        delete  from  sys_role_menu  where menu_id =#{menuId}
    </delete>
    <!--删除菜单表-->
    <update id="upMenu" parameterType="java.lang.String">
        update sys_menu set is_deleted='1' where menu_id =#{menuId}
    </update>


    <insert id="insertRoleMenu" parameterType="java.lang.String">

        insert into sys_role_menu (ID, MENU_ID,ROLE_ID)
    values (#{sysRoleMenuID,jdbcType=VARCHAR}, #{menuId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER})
    </insert>

    <insert id="insertMenu" parameterType="com.first.demo.User.entity.SysMenu">
        insert into sys_menu(menu_id,parent_id,name,url,perms,type,icon,order_num)
        values (SYS_MENU_SEQUENCE.nextval,#{parentId,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR},#{perms,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},#{icon,jdbcType=VARCHAR},#{orderNum,jdbcType=INTEGER})
    </insert>
    <insert id="insertRoleMenus" parameterType="com.first.demo.User.entity.SysRoleMenu">
        insert into sys_role_menu (ID, MENU_ID,ROLE_ID)
        values (SYS_ROLE_MENU_SEQUENCE.nextval, #{menuId,jdbcType=VARCHAR},#{roleId,jdbcType=VARCHAR})
    </insert>
</mapper>