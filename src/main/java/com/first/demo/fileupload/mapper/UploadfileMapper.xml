<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.first.demo.fileupload.mapper.UploadfileMapper">
    <resultMap id="BaseResultMap" type="com.first.demo.fileupload.entity.Uploadfile">
        <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR"/>
        <result column="OPERATOR_NAME" property="operatorName" jdbcType="VARCHAR"/>
        <result column="UPLOAD_TIME" property="uploadTime" jdbcType="VARCHAR"/>
        <result column="USER_ID" property="userId" jdbcType="INTEGER"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from UPLOADFILE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>

    <delete id="fileDelete" parameterType="java.lang.String">
         delete from UPLOADFILE
    where FILE_NAME = #{fileName,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.first.demo.fileupload.entity.Uploadfile">
    insert into UPLOADFILE (ID, FILE_NAME, OPERATOR_NAME,
      UPLOAD_TIME,USER_ID)
    values (#{id,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR},
      #{uploadTime,jdbcType=VARCHAR} , #{userId,jdbcType=INTEGER})
  </insert>
    <!--上传文件-->
    <insert id="megreInsert" parameterType="com.first.demo.fileupload.entity.Uploadfile">
    MERGE INTO UPLOADFILE T1
    USING(select #{fileName,jdbcType=VARCHAR} as FILE_NAME FROM dual) T2 on (T1.FILE_NAME=T2.FILE_NAME)
    WHEN MATCHED THEN UPDATE SET  T1.OPERATOR_NAME=#{operatorName,jdbcType=VARCHAR},T1.UPLOAD_TIME=#{uploadTime,jdbcType=VARCHAR},T1.USER_ID=#{userId,jdbcType=INTEGER}
    WHEN NOT MATCHED THEN  INSERT (T1.FILE_NAME, T1.OPERATOR_NAME,T1.UPLOAD_TIME,T1.USER_ID)
    VALUES (#{fileName,jdbcType=VARCHAR},
            #{operatorName,jdbcType=VARCHAR},
            #{uploadTime,jdbcType=VARCHAR},
            #{userId,jdbcType=INTEGER}
            )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.first.demo.fileupload.entity.Uploadfile">
    update UPLOADFILE
    set FILE_NAME = #{fileName,jdbcType=VARCHAR},
      OPERATOR_NAME = #{operatorName,jdbcType=VARCHAR},
      UPLOAD_TIME = #{uploadTime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

    <select id="selectAll" resultMap="BaseResultMap">
    select  FILE_NAME,OPERATOR_NAME, UPLOAD_TIME
    from UPLOADFILE
  </select>
    <!---->
    <select id="listFile" resultType="com.first.demo.fileupload.entity.Uploadfile">
    select FILE_NAME, OPERATOR_NAME, UPLOAD_TIME
     from UPLOADFILE order by to_date(UPLOAD_TIME,'yyyy-mm-dd hh24:mi:ss') desc
  </select>
    <!---->
    <select id="listFileBuyFuzzy" resultType="com.first.demo.fileupload.entity.Uploadfile">
         select FILE_NAME, OPERATOR_NAME, UPLOAD_TIME from UPLOADFILE
         <where>
             <if test="infos != '' and infos !=null">
                 OPERATOR_NAME like concat(concat('%',#{infos}),'%')
             </if>
         </where>
         order by to_date(UPLOAD_TIME,'yyyy-mm-dd hh24:mi:ss') desc
    </select>

    <!---->
    <select id="selectListUploader" resultType="com.first.demo.fileupload.entity.Uploadfile">
        select distinct  OPERATOR_NAME,UPLOAD_TIME from UPLOADFILE order by to_date(UPLOAD_TIME,'yyyy-mm-dd hh24:mi:ss') desc
    </select>

    <!---->
    <select id="file" parameterType="integer" resultType="com.first.demo.fileupload.entity.Uploadfile">
     select FILE_NAME, OPERATOR_NAME, UPLOAD_TIME
     from UPLOADFILE where USER_ID=#{userId,jdbcType=INTEGER}  order by to_date(UPLOAD_TIME,'yyyy-mm-dd hh24:mi:ss') desc
    </select>

    <!---->
    <select id="selectListUploaderByUserId" parameterType="integer" resultType="com.first.demo.fileupload.entity.Uploadfile">
         select distinct  OPERATOR_NAME,UPLOAD_TIME from UPLOADFILE where USER_ID=#{userId,jdbcType=INTEGER} order by to_date(UPLOAD_TIME,'yyyy-mm-dd hh24:mi:ss') desc
    </select>
</mapper>